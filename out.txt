Instruction: 0
PSH: Pushed value 0 onto stack
Instruction: 0
PSH: Pushed value 1 onto stack
Instruction: 4
MOV: Moved constant 0 to register R0
Instruction: 4
MOV: Moved constant 1 to register R1
Instruction: 0
PSH: Pushed value 10 onto stack
Instruction: 4
MOV: Moved constant 10 to register R2
Instruction: 10
[1;32mOUT: Output register R1 value [0][0m
Instruction: 2
ADD: 0 + 1 = 1
Instruction: 4
MOV: Moved value from register R1 to R0
Instruction: 4
MOV: Moved value from register R3 to R1
Instruction: 3
SUB: 10 - 1 = 9
Instruction: 5
CMP: 3
PC: 46
CMP:R-C 9 == 0
Instruction: 12
JLZ: 9, R2
JLZ: No jump, register is not less than zero, 9
Instruction: 53
Unknown instruction 53
Instruction: 8
>>>>JMP: Requesting Jump to 21 (Before execution, IP=52)
>>>>JMP: Jumped to 21 (After execution, IP=20)
Instruction: 10
[1;32mOUT: Output register R1 value [1][0m
Instruction: 2
ADD: 1 + 1 = 2
Instruction: 4
MOV: Moved value from register R1 to R0
Instruction: 4
MOV: Moved value from register R3 to R1
Instruction: 3
SUB: 9 - 1 = 8
Instruction: 5
CMP: 3
PC: 46
CMP:R-C 8 == 0
Instruction: 12
JLZ: 8, R2
JLZ: No jump, register is not less than zero, 8
Instruction: 53
Unknown instruction 53
Instruction: 8
>>>>JMP: Requesting Jump to 21 (Before execution, IP=52)
>>>>JMP: Jumped to 21 (After execution, IP=20)
Instruction: 10
[1;32mOUT: Output register R1 value [1][0m
Instruction: 2
ADD: 1 + 2 = 3
Instruction: 4
MOV: Moved value from register R1 to R0
Instruction: 4
MOV: Moved value from register R3 to R1
Instruction: 3
SUB: 8 - 1 = 7
Instruction: 5
CMP: 3
PC: 46
CMP:R-C 7 == 0
Instruction: 12
JLZ: 7, R2
JLZ: No jump, register is not less than zero, 7
Instruction: 53
Unknown instruction 53
Instruction: 8
>>>>JMP: Requesting Jump to 21 (Before execution, IP=52)
>>>>JMP: Jumped to 21 (After execution, IP=20)
Instruction: 10
[1;32mOUT: Output register R1 value [2][0m
Instruction: 2
ADD: 2 + 3 = 5
Instruction: 4
MOV: Moved value from register R1 to R0
Instruction: 4
MOV: Moved value from register R3 to R1
Instruction: 3
SUB: 7 - 1 = 6
Instruction: 5
CMP: 3
PC: 46
CMP:R-C 6 == 0
Instruction: 12
JLZ: 6, R2
JLZ: No jump, register is not less than zero, 6
Instruction: 53
Unknown instruction 53
Instruction: 8
>>>>JMP: Requesting Jump to 21 (Before execution, IP=52)
>>>>JMP: Jumped to 21 (After execution, IP=20)
Instruction: 10
[1;32mOUT: Output register R1 value [3][0m
Instruction: 2
ADD: 3 + 5 = 8
Instruction: 4
MOV: Moved value from register R1 to R0
Instruction: 4
MOV: Moved value from register R3 to R1
Instruction: 3
SUB: 6 - 1 = 5
Instruction: 5
CMP: 3
PC: 46
CMP:R-C 5 == 0
Instruction: 12
JLZ: 5, R2
JLZ: No jump, register is not less than zero, 5
Instruction: 53
Unknown instruction 53
Instruction: 8
>>>>JMP: Requesting Jump to 21 (Before execution, IP=52)
>>>>JMP: Jumped to 21 (After execution, IP=20)
Instruction: 10
[1;32mOUT: Output register R1 value [5][0m
Instruction: 2
ADD: 5 + 8 = 13
Instruction: 4
MOV: Moved value from register R1 to R0
Instruction: 4
MOV: Moved value from register R3 to R1
Instruction: 3
SUB: 5 - 1 = 4
Instruction: 5
CMP: 3
PC: 46
CMP:R-C 4 == 0
Instruction: 12
JLZ: 4, R2
JLZ: No jump, register is not less than zero, 4
Instruction: 53
Unknown instruction 53
Instruction: 8
>>>>JMP: Requesting Jump to 21 (Before execution, IP=52)
>>>>JMP: Jumped to 21 (After execution, IP=20)
Instruction: 10
[1;32mOUT: Output register R1 value [8][0m
Instruction: 2
ADD: 8 + 13 = 21
Instruction: 4
MOV: Moved value from register R1 to R0
Instruction: 4
MOV: Moved value from register R3 to R1
Instruction: 3
SUB: 4 - 1 = 3
Instruction: 5
CMP: 3
PC: 46
CMP:R-C 3 == 0
Instruction: 12
JLZ: 3, R2
JLZ: No jump, register is not less than zero, 3
Instruction: 53
Unknown instruction 53
Instruction: 8
>>>>JMP: Requesting Jump to 21 (Before execution, IP=52)
>>>>JMP: Jumped to 21 (After execution, IP=20)
Instruction: 10
[1;32mOUT: Output register R1 value [13][0m
Instruction: 2
ADD: 13 + 21 = 34
Instruction: 4
MOV: Moved value from register R1 to R0
Instruction: 4
MOV: Moved value from register R3 to R1
Instruction: 3
SUB: 3 - 1 = 2
Instruction: 5
CMP: 3
PC: 46
CMP:R-C 2 == 0
Instruction: 12
JLZ: 2, R2
JLZ: No jump, register is not less than zero, 2
Instruction: 53
Unknown instruction 53
Instruction: 8
>>>>JMP: Requesting Jump to 21 (Before execution, IP=52)
>>>>JMP: Jumped to 21 (After execution, IP=20)
Instruction: 10
[1;32mOUT: Output register R1 value [21][0m
Instruction: 2
ADD: 21 + 34 = 55
Instruction: 4
MOV: Moved value from register R1 to R0
Instruction: 4
MOV: Moved value from register R3 to R1
Instruction: 3
SUB: 2 - 1 = 1
Instruction: 5
CMP: 3
PC: 46
CMP:R-C 1 == 0
Instruction: 12
JLZ: 1, R2
JLZ: No jump, register is not less than zero, 1
Instruction: 53
Unknown instruction 53
Instruction: 8
>>>>JMP: Requesting Jump to 21 (Before execution, IP=52)
>>>>JMP: Jumped to 21 (After execution, IP=20)
Instruction: 10
[1;32mOUT: Output register R1 value [34][0m
Instruction: 2
ADD: 34 + 55 = 89
Instruction: 4
MOV: Moved value from register R1 to R0
Instruction: 4
MOV: Moved value from register R3 to R1
Instruction: 3
SUB: 1 - 1 = 0
Instruction: 5
CMP: 3
PC: 46
CMP:R-C 0 == 0
Instruction: 12
JLZ: 0, R2
JLZ: No jump, register is not less than zero, 0
Instruction: 53
Unknown instruction 53
Instruction: 8
>>>>JMP: Requesting Jump to 21 (Before execution, IP=52)
>>>>JMP: Jumped to 21 (After execution, IP=20)
Instruction: 10
[1;32mOUT: Output register R1 value [55][0m
Instruction: 2
ADD: 55 + 89 = 144
Instruction: 4
MOV: Moved value from register R1 to R0
Instruction: 4
MOV: Moved value from register R3 to R1
Instruction: 3
SUB: 0 - 1 = -1
Instruction: 5
CMP: 3
PC: 46
CMP:R-C -1 == 0
Instruction: 12
JLZ: -1, R2
JLZ: Jump to 52
Instruction: 9
NOP: No operation
Instruction: 7
HLT
